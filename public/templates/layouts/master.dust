<!DOCTYPE html>
<html class="no-js">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <title>{+title /}</title>
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="style.css" />
</head>
<body>

<div id="wrapper">
  {+body /}
</div>

<script src="js/lib/socketio.js"></script>
<script>
  var currentTree = 1;
  var percentSize = 0;
  var treeSizeOriginal = [20, 40, 35, 30, 25];
  var treeLeftPosition = [11, 26, 46, 72, 86];
  var treeSizeUnit = 'vw';
  var min = 0;
  var max = 0;
  var position = '';
  var lostWords = '';
  var lost = ''
  var count = 0;
  var fallingLeaf = 0;
  var vanishingLeaf = 0;
  var currLeafCount = 0;
  var prevLeafCount = 1000;
  var differenceLeafCount = 0;

  var socket = io.connect('/');

  document.getElementById('start').onclick = function() {
    socket.emit('simulation', 'start');
    document.getElementById('start').style.display = 'none';
  };

  socket.on('ping', function (data) {

    count += 1;
    currLeafCount = data;
    fallingLeaf = (count % 5) + 1;
    vanishingLeaf = (fallingLeaf % 5) + 1;

    differenceLeafCount = prevLeafCount - currLeafCount;

    document.getElementById('l' + fallingLeaf).style.display = 'block';
    if(differenceLeafCount > 0) {
      document.getElementById('l' + vanishingLeaf).style.display = 'none';
      document.getElementById('l' + fallingLeaf).innerHTML = '-' + differenceLeafCount;
    }

    document.getElementById('left').style.width = Math.round(data/10) + '%';
    var lost = 100 - Math.round(data/10) + '%';
    document.getElementById('lost').style.width = lost;
    document.getElementById('lost').innerHTML = lost + ' forrest lost ';

    function reduceForest(min, max, currentTreeNum, data) {
      var prevTreeNum = currentTreeNum - 1;
      var prevTree = document.getElementById('t' + prevTreeNum);
      var prevFlower = document.getElementById('f' + prevTreeNum);
      var currTree = document.getElementById('t' + currentTreeNum);

      if(prevTreeNum > 0) {
        prevTree.style.width = 0 + treeSizeUnit;
        prevTree.style.height = 0 + treeSizeUnit;
        prevFlower.style.display = 'none';
      }

      treeSize = treeSizeOriginal[currentTreeNum-1]*((data-min)/(max-min));
      currTree.style.width = treeSize + treeSizeUnit;
      currTree.style.height = treeSize + treeSizeUnit;
      currTree.style.left = treeLeftPosition[currentTreeNum - 1] - treeSize / 2 + treeSizeUnit;
    }

    if(data > 900 && data <= 1000) reduceForest(900, 1000, 1, data);
    else if(data > 550 && data <= 900) reduceForest(550, 900, 2, data);
    else if(data > 300 && data <= 550) reduceForest(300, 550, 3, data);
    else if(data > 100 && data <= 300) reduceForest(100, 300, 4, data);
    else if(data > 1 && data <= 100) reduceForest(1, 100, 5, data);
    else {
      document.getElementById('b').style.display = 'none';
      document.getElementById('t' + currentTree).style.width = 0 + treeSizeUnit;
      document.getElementById('t' + currentTree).style.height = 0 + treeSizeUnit;

      document.getElementById('lost').style.width = '100%';
      document.getElementById('lost').innerHTML = 'all forest is lost :(';
      document.getElementById('start').style.display = 'block';
    }

    prevLeafCount = data;

  });

  // clouds
  var currCloud = 0;
  var nextCloud = 1;
  var totalCloud = 3;
  document.getElementById('c' + currCloud).style.display = 'block';

  setInterval(function() {
    document.getElementById('c' + currCloud).style.display = 'none';
    document.getElementById('c' + nextCloud).style.display = 'block';
    console.log('This cloud: ' + currCloud);
    console.log('Next cloud: ' + nextCloud);
    currCloud = (currCloud + 1) % totalCloud;
    nextCloud = (nextCloud + 1) % totalCloud;
  }, 300000);

  // draw stars

  function drawing(el) {
    var c = document.getElementById(el);
    var ctx = c.getContext('2d');
    var xMax = c.width = window.screen.availWidth;
    var yMax = c.height = window.screen.availHeight;

    var hmTimes = Math.round(xMax + yMax);

    for(var i=0; i<=hmTimes; i++) {
      var randomX = Math.floor((Math.random()*xMax)+1);
      var randomY = Math.floor((Math.random()*yMax)+1);
      var randomSize = Math.floor((Math.random()*2)+1);
      var randomOpacityOne = Math.floor((Math.random()*9)+1);
      var randomOpacityTwo = Math.floor((Math.random()*9)+1);
      var randomHue = Math.floor((Math.random()*360)+1);
      if(randomSize>1) {
        ctx.shadowBlur = Math.floor((Math.random()*15)+5);
        ctx.shadowColor = "white";
      }
      ctx.fillStyle = "hsla("+randomHue+", 30%, 80%, ."+randomOpacityOne+randomOpacityTwo+")";
      ctx.fillRect(randomX, randomY, randomSize, randomSize);
    }

  }
  drawing('sky-top');
  drawing('sky-bottom');

</script>

</body>
</html>
